# Use the latest 2.1 version of CircleCI pipeline process engine.
# See: https://circleci.com/docs/2.0/configuration-reference
version: 2.1

commands:
  destroy_environment:
    steps:
      - run:
          name: Destroy environment.
          when: on_fail
          command: |
            aws cloudformation delete-stack \ 
            --stack-name udacity-${CIRCLE_WORKFLOW_ID:0:5} \


# Define a job to be invoked later in a workflow.
# See: https://circleci.com/docs/2.0/configuration-reference/#jobs
jobs:
  say-hello:
    # Specify the execution environment. You can specify an image from Dockerhub or use one of our Convenience Images from CircleCI's Developer Hub.
    # See: https://circleci.com/docs/2.0/configuration-reference/#docker-machine-macos-windows-executor
    docker:
      - image: cimg/base:stable
    # Add steps to the job
    # See: https://circleci.com/docs/2.0/configuration-reference/#steps
    steps:
      - checkout
      - run:
          name: "Say hello"
          command: "echo Hello, World!"

  create_infrastructure:
    docker:
      - image: amazon/aws-cli
    steps:
      - checkout
      - run:
          name: Create cloudformation stack
          command: |
            aws cloudformation deploy \
            --template-file template.yml \
            --stack-name udacity-${CIRCLE_WORKFLOW_ID:0:5} \
            --region us-east-1

  configure_infrastructure:
    docker:
      - image: cimg/python:3.10.5
      #- image: amazon/aws-cli
    steps:
      - checkout
      - add_ssh_keys:
          fingerprints:
            - "fa:9f:92:9c:b5:be:c9:73:06:16:2a:e6:cc:a6:9c:62"
      - run: 
          name: Install Ansible
          command: |
            pip install ansible
      - run:
          name: Install AWS CLI
          command: |
            sudo apt update && \
            curl "https://awscli.amazonaws.com/awscli-exe-linux-x86_64.zip" -o "awscliv2.zip" \
            unzip awscliv2.zip && \
            sudo ./aws/install


      - run: 
          name: Update inventory file
          command: |
            echo "[all]" > inventor.txt && \
            aws ec2 describe-instances --query 'Reservations[*].Instances[*].PublicIpAddress' \
            --output text >> inventor.txt 

      - run: 
          name: Run playbook and configure server
          command: ansible-playbook main.yml -i inventor.txt
      - destroy_environment 
  smoke_test:
    docker: 
      - image: cimg/base:stable
    steps:
      - checkout
      - run:
          name: smoke test
          command: |
            URL="https://blog.udacity.com/"
            if curl -s --head ${URL}
            then
              exit 0
            else
              exit 1
            fi

  smoke_test_fail:
    docker: 
      - image: alpine:latest
    steps:
      - run: 
          name: Failed smoke test
          command: exit 1
      - destroy_environment

# Invoke jobs via workflows
# See: https://circleci.com/docs/2.0/configuration-reference/#workflows
workflows:
  say-hello-workflow:
    jobs:
      #- say-hello
      - create_infrastructure
      - configure_infrastructure
      - smoke_test_fail